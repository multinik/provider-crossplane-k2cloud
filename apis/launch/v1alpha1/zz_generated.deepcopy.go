//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountInitParameters) DeepCopyInto(out *AcceleratorCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountInitParameters.
func (in *AcceleratorCountInitParameters) DeepCopy() *AcceleratorCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountObservation) DeepCopyInto(out *AcceleratorCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountObservation.
func (in *AcceleratorCountObservation) DeepCopy() *AcceleratorCountObservation {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountParameters) DeepCopyInto(out *AcceleratorCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountParameters.
func (in *AcceleratorCountParameters) DeepCopy() *AcceleratorCountParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibInitParameters) DeepCopyInto(out *AcceleratorTotalMemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibInitParameters.
func (in *AcceleratorTotalMemoryMibInitParameters) DeepCopy() *AcceleratorTotalMemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibObservation) DeepCopyInto(out *AcceleratorTotalMemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibObservation.
func (in *AcceleratorTotalMemoryMibObservation) DeepCopy() *AcceleratorTotalMemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibParameters) DeepCopyInto(out *AcceleratorTotalMemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibParameters.
func (in *AcceleratorTotalMemoryMibParameters) DeepCopy() *AcceleratorTotalMemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsInitParameters) DeepCopyInto(out *BaselineEBSBandwidthMbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsInitParameters.
func (in *BaselineEBSBandwidthMbpsInitParameters) DeepCopy() *BaselineEBSBandwidthMbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsObservation) DeepCopyInto(out *BaselineEBSBandwidthMbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsObservation.
func (in *BaselineEBSBandwidthMbpsObservation) DeepCopy() *BaselineEBSBandwidthMbpsObservation {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsParameters) DeepCopyInto(out *BaselineEBSBandwidthMbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsParameters.
func (in *BaselineEBSBandwidthMbpsParameters) DeepCopy() *BaselineEBSBandwidthMbpsParameters {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsInitParameters) DeepCopyInto(out *BlockDeviceMappingsInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = make([]EBSInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsInitParameters.
func (in *BlockDeviceMappingsInitParameters) DeepCopy() *BlockDeviceMappingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsObservation) DeepCopyInto(out *BlockDeviceMappingsObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = make([]EBSObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsObservation.
func (in *BlockDeviceMappingsObservation) DeepCopy() *BlockDeviceMappingsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsParameters) DeepCopyInto(out *BlockDeviceMappingsParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = make([]EBSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsParameters.
func (in *BlockDeviceMappingsParameters) DeepCopy() *BlockDeviceMappingsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUOptionsInitParameters) DeepCopyInto(out *CPUOptionsInitParameters) {
	*out = *in
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUOptionsInitParameters.
func (in *CPUOptionsInitParameters) DeepCopy() *CPUOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CPUOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUOptionsObservation) DeepCopyInto(out *CPUOptionsObservation) {
	*out = *in
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUOptionsObservation.
func (in *CPUOptionsObservation) DeepCopy() *CPUOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CPUOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUOptionsParameters) DeepCopyInto(out *CPUOptionsParameters) {
	*out = *in
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUOptionsParameters.
func (in *CPUOptionsParameters) DeepCopy() *CPUOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CPUOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationInitParameters) DeepCopyInto(out *CapacityReservationSpecificationInitParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]CapacityReservationTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationInitParameters.
func (in *CapacityReservationSpecificationInitParameters) DeepCopy() *CapacityReservationSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationObservation) DeepCopyInto(out *CapacityReservationSpecificationObservation) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]CapacityReservationTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationObservation.
func (in *CapacityReservationSpecificationObservation) DeepCopy() *CapacityReservationSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationParameters) DeepCopyInto(out *CapacityReservationSpecificationParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]CapacityReservationTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationParameters.
func (in *CapacityReservationSpecificationParameters) DeepCopy() *CapacityReservationSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationTargetInitParameters) DeepCopyInto(out *CapacityReservationTargetInitParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationTargetInitParameters.
func (in *CapacityReservationTargetInitParameters) DeepCopy() *CapacityReservationTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationTargetObservation) DeepCopyInto(out *CapacityReservationTargetObservation) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationTargetObservation.
func (in *CapacityReservationTargetObservation) DeepCopy() *CapacityReservationTargetObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationTargetParameters) DeepCopyInto(out *CapacityReservationTargetParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationTargetParameters.
func (in *CapacityReservationTargetParameters) DeepCopy() *CapacityReservationTargetParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreditSpecificationInitParameters) DeepCopyInto(out *CreditSpecificationInitParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreditSpecificationInitParameters.
func (in *CreditSpecificationInitParameters) DeepCopy() *CreditSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreditSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreditSpecificationObservation) DeepCopyInto(out *CreditSpecificationObservation) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreditSpecificationObservation.
func (in *CreditSpecificationObservation) DeepCopy() *CreditSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(CreditSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreditSpecificationParameters) DeepCopyInto(out *CreditSpecificationParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreditSpecificationParameters.
func (in *CreditSpecificationParameters) DeepCopy() *CreditSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(CreditSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSInitParameters) DeepCopyInto(out *EBSInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSInitParameters.
func (in *EBSInitParameters) DeepCopy() *EBSInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSObservation) DeepCopyInto(out *EBSObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSObservation.
func (in *EBSObservation) DeepCopy() *EBSObservation {
	if in == nil {
		return nil
	}
	out := new(EBSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSParameters) DeepCopyInto(out *EBSParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSParameters.
func (in *EBSParameters) DeepCopy() *EBSParameters {
	if in == nil {
		return nil
	}
	out := new(EBSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticGpuSpecificationsInitParameters) DeepCopyInto(out *ElasticGpuSpecificationsInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticGpuSpecificationsInitParameters.
func (in *ElasticGpuSpecificationsInitParameters) DeepCopy() *ElasticGpuSpecificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticGpuSpecificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticGpuSpecificationsObservation) DeepCopyInto(out *ElasticGpuSpecificationsObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticGpuSpecificationsObservation.
func (in *ElasticGpuSpecificationsObservation) DeepCopy() *ElasticGpuSpecificationsObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticGpuSpecificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticGpuSpecificationsParameters) DeepCopyInto(out *ElasticGpuSpecificationsParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticGpuSpecificationsParameters.
func (in *ElasticGpuSpecificationsParameters) DeepCopy() *ElasticGpuSpecificationsParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticGpuSpecificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticInferenceAcceleratorInitParameters) DeepCopyInto(out *ElasticInferenceAcceleratorInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticInferenceAcceleratorInitParameters.
func (in *ElasticInferenceAcceleratorInitParameters) DeepCopy() *ElasticInferenceAcceleratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticInferenceAcceleratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticInferenceAcceleratorObservation) DeepCopyInto(out *ElasticInferenceAcceleratorObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticInferenceAcceleratorObservation.
func (in *ElasticInferenceAcceleratorObservation) DeepCopy() *ElasticInferenceAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticInferenceAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticInferenceAcceleratorParameters) DeepCopyInto(out *ElasticInferenceAcceleratorParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticInferenceAcceleratorParameters.
func (in *ElasticInferenceAcceleratorParameters) DeepCopy() *ElasticInferenceAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticInferenceAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnclaveOptionsInitParameters) DeepCopyInto(out *EnclaveOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnclaveOptionsInitParameters.
func (in *EnclaveOptionsInitParameters) DeepCopy() *EnclaveOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnclaveOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnclaveOptionsObservation) DeepCopyInto(out *EnclaveOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnclaveOptionsObservation.
func (in *EnclaveOptionsObservation) DeepCopy() *EnclaveOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(EnclaveOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnclaveOptionsParameters) DeepCopyInto(out *EnclaveOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnclaveOptionsParameters.
func (in *EnclaveOptionsParameters) DeepCopy() *EnclaveOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(EnclaveOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationOptionsInitParameters) DeepCopyInto(out *HibernationOptionsInitParameters) {
	*out = *in
	if in.Configured != nil {
		in, out := &in.Configured, &out.Configured
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationOptionsInitParameters.
func (in *HibernationOptionsInitParameters) DeepCopy() *HibernationOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HibernationOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationOptionsObservation) DeepCopyInto(out *HibernationOptionsObservation) {
	*out = *in
	if in.Configured != nil {
		in, out := &in.Configured, &out.Configured
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationOptionsObservation.
func (in *HibernationOptionsObservation) DeepCopy() *HibernationOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(HibernationOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationOptionsParameters) DeepCopyInto(out *HibernationOptionsParameters) {
	*out = *in
	if in.Configured != nil {
		in, out := &in.Configured, &out.Configured
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationOptionsParameters.
func (in *HibernationOptionsParameters) DeepCopy() *HibernationOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(HibernationOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInstanceProfileInitParameters) DeepCopyInto(out *IAMInstanceProfileInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInstanceProfileInitParameters.
func (in *IAMInstanceProfileInitParameters) DeepCopy() *IAMInstanceProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(IAMInstanceProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInstanceProfileObservation) DeepCopyInto(out *IAMInstanceProfileObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInstanceProfileObservation.
func (in *IAMInstanceProfileObservation) DeepCopy() *IAMInstanceProfileObservation {
	if in == nil {
		return nil
	}
	out := new(IAMInstanceProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInstanceProfileParameters) DeepCopyInto(out *IAMInstanceProfileParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInstanceProfileParameters.
func (in *IAMInstanceProfileParameters) DeepCopy() *IAMInstanceProfileParameters {
	if in == nil {
		return nil
	}
	out := new(IAMInstanceProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsInitParameters) DeepCopyInto(out *InstanceMarketOptionsInitParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = make([]SpotOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsInitParameters.
func (in *InstanceMarketOptionsInitParameters) DeepCopy() *InstanceMarketOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsObservation) DeepCopyInto(out *InstanceMarketOptionsObservation) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = make([]SpotOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsObservation.
func (in *InstanceMarketOptionsObservation) DeepCopy() *InstanceMarketOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsParameters) DeepCopyInto(out *InstanceMarketOptionsParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = make([]SpotOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsParameters.
func (in *InstanceMarketOptionsParameters) DeepCopy() *InstanceMarketOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsInitParameters) DeepCopyInto(out *InstanceRequirementsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]AcceleratorCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]AcceleratorTotalMemoryMibInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]BaselineEBSBandwidthMbpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]MemoryGibPerVcpuInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]MemoryMibInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]NetworkInterfaceCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]TotalLocalStorageGbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]VcpuCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsInitParameters.
func (in *InstanceRequirementsInitParameters) DeepCopy() *InstanceRequirementsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsObservation) DeepCopyInto(out *InstanceRequirementsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]AcceleratorCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]AcceleratorTotalMemoryMibObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]BaselineEBSBandwidthMbpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]MemoryGibPerVcpuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]MemoryMibObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]NetworkInterfaceCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]TotalLocalStorageGbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]VcpuCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsObservation.
func (in *InstanceRequirementsObservation) DeepCopy() *InstanceRequirementsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsParameters) DeepCopyInto(out *InstanceRequirementsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]AcceleratorCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]AcceleratorTotalMemoryMibParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]BaselineEBSBandwidthMbpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]MemoryGibPerVcpuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]MemoryMibParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]NetworkInterfaceCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]TotalLocalStorageGbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]VcpuCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsParameters.
func (in *InstanceRequirementsParameters) DeepCopy() *InstanceRequirementsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpecificationInitParameters) DeepCopyInto(out *LicenseSpecificationInitParameters) {
	*out = *in
	if in.LicenseConfigurationArn != nil {
		in, out := &in.LicenseConfigurationArn, &out.LicenseConfigurationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpecificationInitParameters.
func (in *LicenseSpecificationInitParameters) DeepCopy() *LicenseSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LicenseSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpecificationObservation) DeepCopyInto(out *LicenseSpecificationObservation) {
	*out = *in
	if in.LicenseConfigurationArn != nil {
		in, out := &in.LicenseConfigurationArn, &out.LicenseConfigurationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpecificationObservation.
func (in *LicenseSpecificationObservation) DeepCopy() *LicenseSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LicenseSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpecificationParameters) DeepCopyInto(out *LicenseSpecificationParameters) {
	*out = *in
	if in.LicenseConfigurationArn != nil {
		in, out := &in.LicenseConfigurationArn, &out.LicenseConfigurationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpecificationParameters.
func (in *LicenseSpecificationParameters) DeepCopy() *LicenseSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LicenseSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceOptionsInitParameters) DeepCopyInto(out *MaintenanceOptionsInitParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceOptionsInitParameters.
func (in *MaintenanceOptionsInitParameters) DeepCopy() *MaintenanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceOptionsObservation) DeepCopyInto(out *MaintenanceOptionsObservation) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceOptionsObservation.
func (in *MaintenanceOptionsObservation) DeepCopy() *MaintenanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceOptionsParameters) DeepCopyInto(out *MaintenanceOptionsParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceOptionsParameters.
func (in *MaintenanceOptionsParameters) DeepCopy() *MaintenanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuInitParameters) DeepCopyInto(out *MemoryGibPerVcpuInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuInitParameters.
func (in *MemoryGibPerVcpuInitParameters) DeepCopy() *MemoryGibPerVcpuInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuObservation) DeepCopyInto(out *MemoryGibPerVcpuObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuObservation.
func (in *MemoryGibPerVcpuObservation) DeepCopy() *MemoryGibPerVcpuObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuParameters) DeepCopyInto(out *MemoryGibPerVcpuParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuParameters.
func (in *MemoryGibPerVcpuParameters) DeepCopy() *MemoryGibPerVcpuParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibInitParameters) DeepCopyInto(out *MemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibInitParameters.
func (in *MemoryMibInitParameters) DeepCopy() *MemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibObservation) DeepCopyInto(out *MemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibObservation.
func (in *MemoryMibObservation) DeepCopy() *MemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibParameters) DeepCopyInto(out *MemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibParameters.
func (in *MemoryMibParameters) DeepCopy() *MemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataOptionsInitParameters) DeepCopyInto(out *MetadataOptionsInitParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataOptionsInitParameters.
func (in *MetadataOptionsInitParameters) DeepCopy() *MetadataOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataOptionsObservation) DeepCopyInto(out *MetadataOptionsObservation) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataOptionsObservation.
func (in *MetadataOptionsObservation) DeepCopy() *MetadataOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataOptionsParameters) DeepCopyInto(out *MetadataOptionsParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataOptionsParameters.
func (in *MetadataOptionsParameters) DeepCopy() *MetadataOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringInitParameters) DeepCopyInto(out *MonitoringInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringInitParameters.
func (in *MonitoringInitParameters) DeepCopy() *MonitoringInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringObservation) DeepCopyInto(out *MonitoringObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringObservation.
func (in *MonitoringObservation) DeepCopy() *MonitoringObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringParameters) DeepCopyInto(out *MonitoringParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringParameters.
func (in *MonitoringParameters) DeepCopy() *MonitoringParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountInitParameters) DeepCopyInto(out *NetworkInterfaceCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountInitParameters.
func (in *NetworkInterfaceCountInitParameters) DeepCopy() *NetworkInterfaceCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountObservation) DeepCopyInto(out *NetworkInterfaceCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountObservation.
func (in *NetworkInterfaceCountObservation) DeepCopy() *NetworkInterfaceCountObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountParameters) DeepCopyInto(out *NetworkInterfaceCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountParameters.
func (in *NetworkInterfaceCountParameters) DeepCopy() *NetworkInterfaceCountParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfacesInitParameters) DeepCopyInto(out *NetworkInterfacesInitParameters) {
	*out = *in
	if in.AssociateCarrierIPAddress != nil {
		in, out := &in.AssociateCarrierIPAddress, &out.AssociateCarrierIPAddress
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.IPv4AddressCount != nil {
		in, out := &in.IPv4AddressCount, &out.IPv4AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfacesInitParameters.
func (in *NetworkInterfacesInitParameters) DeepCopy() *NetworkInterfacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfacesObservation) DeepCopyInto(out *NetworkInterfacesObservation) {
	*out = *in
	if in.AssociateCarrierIPAddress != nil {
		in, out := &in.AssociateCarrierIPAddress, &out.AssociateCarrierIPAddress
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.IPv4AddressCount != nil {
		in, out := &in.IPv4AddressCount, &out.IPv4AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfacesObservation.
func (in *NetworkInterfacesObservation) DeepCopy() *NetworkInterfacesObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfacesParameters) DeepCopyInto(out *NetworkInterfacesParameters) {
	*out = *in
	if in.AssociateCarrierIPAddress != nil {
		in, out := &in.AssociateCarrierIPAddress, &out.AssociateCarrierIPAddress
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.IPv4AddressCount != nil {
		in, out := &in.IPv4AddressCount, &out.IPv4AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfacesParameters.
func (in *NetworkInterfacesParameters) DeepCopy() *NetworkInterfacesParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementInitParameters) DeepCopyInto(out *PlacementInitParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.PartitionNumber != nil {
		in, out := &in.PartitionNumber, &out.PartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.SpreadDomain != nil {
		in, out := &in.SpreadDomain, &out.SpreadDomain
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementInitParameters.
func (in *PlacementInitParameters) DeepCopy() *PlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementObservation) DeepCopyInto(out *PlacementObservation) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.PartitionNumber != nil {
		in, out := &in.PartitionNumber, &out.PartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.SpreadDomain != nil {
		in, out := &in.SpreadDomain, &out.SpreadDomain
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementObservation.
func (in *PlacementObservation) DeepCopy() *PlacementObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementParameters) DeepCopyInto(out *PlacementParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.PartitionNumber != nil {
		in, out := &in.PartitionNumber, &out.PartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.SpreadDomain != nil {
		in, out := &in.SpreadDomain, &out.SpreadDomain
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementParameters.
func (in *PlacementParameters) DeepCopy() *PlacementParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameOptionsInitParameters) DeepCopyInto(out *PrivateDNSNameOptionsInitParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameOptionsInitParameters.
func (in *PrivateDNSNameOptionsInitParameters) DeepCopy() *PrivateDNSNameOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameOptionsObservation) DeepCopyInto(out *PrivateDNSNameOptionsObservation) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameOptionsObservation.
func (in *PrivateDNSNameOptionsObservation) DeepCopy() *PrivateDNSNameOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameOptionsParameters) DeepCopyInto(out *PrivateDNSNameOptionsParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameOptionsParameters.
func (in *PrivateDNSNameOptionsParameters) DeepCopy() *PrivateDNSNameOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotOptionsInitParameters) DeepCopyInto(out *SpotOptionsInitParameters) {
	*out = *in
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotOptionsInitParameters.
func (in *SpotOptionsInitParameters) DeepCopy() *SpotOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotOptionsObservation) DeepCopyInto(out *SpotOptionsObservation) {
	*out = *in
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotOptionsObservation.
func (in *SpotOptionsObservation) DeepCopy() *SpotOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotOptionsParameters) DeepCopyInto(out *SpotOptionsParameters) {
	*out = *in
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotOptionsParameters.
func (in *SpotOptionsParameters) DeepCopy() *SpotOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpecificationsInitParameters) DeepCopyInto(out *TagSpecificationsInitParameters) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpecificationsInitParameters.
func (in *TagSpecificationsInitParameters) DeepCopy() *TagSpecificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagSpecificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpecificationsObservation) DeepCopyInto(out *TagSpecificationsObservation) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpecificationsObservation.
func (in *TagSpecificationsObservation) DeepCopy() *TagSpecificationsObservation {
	if in == nil {
		return nil
	}
	out := new(TagSpecificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpecificationsParameters) DeepCopyInto(out *TagSpecificationsParameters) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpecificationsParameters.
func (in *TagSpecificationsParameters) DeepCopy() *TagSpecificationsParameters {
	if in == nil {
		return nil
	}
	out := new(TagSpecificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Template) DeepCopyInto(out *Template) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Template.
func (in *Template) DeepCopy() *Template {
	if in == nil {
		return nil
	}
	out := new(Template)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Template) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateInitParameters) DeepCopyInto(out *TemplateInitParameters) {
	*out = *in
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]CPUOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]CapacityReservationSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]CreditSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(string)
		**out = **in
	}
	if in.ElasticGpuSpecifications != nil {
		in, out := &in.ElasticGpuSpecifications, &out.ElasticGpuSpecifications
		*out = make([]ElasticGpuSpecificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticInferenceAccelerator != nil {
		in, out := &in.ElasticInferenceAccelerator, &out.ElasticInferenceAccelerator
		*out = make([]ElasticInferenceAcceleratorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]EnclaveOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HibernationOptions != nil {
		in, out := &in.HibernationOptions, &out.HibernationOptions
		*out = make([]HibernationOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = make([]IAMInstanceProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = make([]InstanceMarketOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]InstanceRequirementsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LicenseSpecification != nil {
		in, out := &in.LicenseSpecification, &out.LicenseSpecification
		*out = make([]LicenseSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]MaintenanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]MetadataOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]MonitoringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterfacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]PrivateDNSNameOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RAMDiskID != nil {
		in, out := &in.RAMDiskID, &out.RAMDiskID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupNames != nil {
		in, out := &in.SecurityGroupNames, &out.SecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagSpecifications != nil {
		in, out := &in.TagSpecifications, &out.TagSpecifications
		*out = make([]TagSpecificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateDefaultVersion != nil {
		in, out := &in.UpdateDefaultVersion, &out.UpdateDefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateInitParameters.
func (in *TemplateInitParameters) DeepCopy() *TemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateList) DeepCopyInto(out *TemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Template, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateList.
func (in *TemplateList) DeepCopy() *TemplateList {
	if in == nil {
		return nil
	}
	out := new(TemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateObservation) DeepCopyInto(out *TemplateObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]CPUOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]CapacityReservationSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]CreditSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(string)
		**out = **in
	}
	if in.ElasticGpuSpecifications != nil {
		in, out := &in.ElasticGpuSpecifications, &out.ElasticGpuSpecifications
		*out = make([]ElasticGpuSpecificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticInferenceAccelerator != nil {
		in, out := &in.ElasticInferenceAccelerator, &out.ElasticInferenceAccelerator
		*out = make([]ElasticInferenceAcceleratorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]EnclaveOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HibernationOptions != nil {
		in, out := &in.HibernationOptions, &out.HibernationOptions
		*out = make([]HibernationOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = make([]IAMInstanceProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = make([]InstanceMarketOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]InstanceRequirementsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LatestVersion != nil {
		in, out := &in.LatestVersion, &out.LatestVersion
		*out = new(float64)
		**out = **in
	}
	if in.LicenseSpecification != nil {
		in, out := &in.LicenseSpecification, &out.LicenseSpecification
		*out = make([]LicenseSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]MaintenanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]MetadataOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]MonitoringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterfacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]PrivateDNSNameOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RAMDiskID != nil {
		in, out := &in.RAMDiskID, &out.RAMDiskID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupNames != nil {
		in, out := &in.SecurityGroupNames, &out.SecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagSpecifications != nil {
		in, out := &in.TagSpecifications, &out.TagSpecifications
		*out = make([]TagSpecificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateDefaultVersion != nil {
		in, out := &in.UpdateDefaultVersion, &out.UpdateDefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateObservation.
func (in *TemplateObservation) DeepCopy() *TemplateObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateParameters) DeepCopyInto(out *TemplateParameters) {
	*out = *in
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]CPUOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]CapacityReservationSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]CreditSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(string)
		**out = **in
	}
	if in.ElasticGpuSpecifications != nil {
		in, out := &in.ElasticGpuSpecifications, &out.ElasticGpuSpecifications
		*out = make([]ElasticGpuSpecificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticInferenceAccelerator != nil {
		in, out := &in.ElasticInferenceAccelerator, &out.ElasticInferenceAccelerator
		*out = make([]ElasticInferenceAcceleratorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]EnclaveOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HibernationOptions != nil {
		in, out := &in.HibernationOptions, &out.HibernationOptions
		*out = make([]HibernationOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = make([]IAMInstanceProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = make([]InstanceMarketOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]InstanceRequirementsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LicenseSpecification != nil {
		in, out := &in.LicenseSpecification, &out.LicenseSpecification
		*out = make([]LicenseSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]MaintenanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]MetadataOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]MonitoringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterfacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]PrivateDNSNameOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RAMDiskID != nil {
		in, out := &in.RAMDiskID, &out.RAMDiskID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupNames != nil {
		in, out := &in.SecurityGroupNames, &out.SecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagSpecifications != nil {
		in, out := &in.TagSpecifications, &out.TagSpecifications
		*out = make([]TagSpecificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateDefaultVersion != nil {
		in, out := &in.UpdateDefaultVersion, &out.UpdateDefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateParameters.
func (in *TemplateParameters) DeepCopy() *TemplateParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateSpec) DeepCopyInto(out *TemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateSpec.
func (in *TemplateSpec) DeepCopy() *TemplateSpec {
	if in == nil {
		return nil
	}
	out := new(TemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateStatus) DeepCopyInto(out *TemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateStatus.
func (in *TemplateStatus) DeepCopy() *TemplateStatus {
	if in == nil {
		return nil
	}
	out := new(TemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbInitParameters) DeepCopyInto(out *TotalLocalStorageGbInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbInitParameters.
func (in *TotalLocalStorageGbInitParameters) DeepCopy() *TotalLocalStorageGbInitParameters {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbObservation) DeepCopyInto(out *TotalLocalStorageGbObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbObservation.
func (in *TotalLocalStorageGbObservation) DeepCopy() *TotalLocalStorageGbObservation {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbParameters) DeepCopyInto(out *TotalLocalStorageGbParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbParameters.
func (in *TotalLocalStorageGbParameters) DeepCopy() *TotalLocalStorageGbParameters {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountInitParameters) DeepCopyInto(out *VcpuCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountInitParameters.
func (in *VcpuCountInitParameters) DeepCopy() *VcpuCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(VcpuCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountObservation) DeepCopyInto(out *VcpuCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountObservation.
func (in *VcpuCountObservation) DeepCopy() *VcpuCountObservation {
	if in == nil {
		return nil
	}
	out := new(VcpuCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountParameters) DeepCopyInto(out *VcpuCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountParameters.
func (in *VcpuCountParameters) DeepCopy() *VcpuCountParameters {
	if in == nil {
		return nil
	}
	out := new(VcpuCountParameters)
	in.DeepCopyInto(out)
	return out
}
