// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccessControlPolicyGrantInitParameters struct {
	Grantee []GranteeInitParameters `json:"grantee,omitempty" tf:"grantee,omitempty"`

	Permission *string `json:"permission,omitempty" tf:"permission,omitempty"`
}

type AccessControlPolicyGrantObservation struct {
	Grantee []GranteeObservation `json:"grantee,omitempty" tf:"grantee,omitempty"`

	Permission *string `json:"permission,omitempty" tf:"permission,omitempty"`
}

type AccessControlPolicyGrantParameters struct {

	// +kubebuilder:validation:Optional
	Grantee []GranteeParameters `json:"grantee,omitempty" tf:"grantee,omitempty"`

	// +kubebuilder:validation:Optional
	Permission *string `json:"permission" tf:"permission,omitempty"`
}

type AccessControlPolicyInitParameters struct {
	Grant []AccessControlPolicyGrantInitParameters `json:"grant,omitempty" tf:"grant,omitempty"`

	Owner []OwnerInitParameters `json:"owner,omitempty" tf:"owner,omitempty"`
}

type AccessControlPolicyObservation struct {
	Grant []AccessControlPolicyGrantObservation `json:"grant,omitempty" tf:"grant,omitempty"`

	Owner []OwnerObservation `json:"owner,omitempty" tf:"owner,omitempty"`
}

type AccessControlPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Grant []AccessControlPolicyGrantParameters `json:"grant,omitempty" tf:"grant,omitempty"`

	// +kubebuilder:validation:Optional
	Owner []OwnerParameters `json:"owner" tf:"owner,omitempty"`
}

type BucketACLInitParameters struct {
	ACL *string `json:"acl,omitempty" tf:"acl,omitempty"`

	AccessControlPolicy []AccessControlPolicyInitParameters `json:"accessControlPolicy,omitempty" tf:"access_control_policy,omitempty"`

	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	ExpectedBucketOwner *string `json:"expectedBucketOwner,omitempty" tf:"expected_bucket_owner,omitempty"`
}

type BucketACLObservation struct {
	ACL *string `json:"acl,omitempty" tf:"acl,omitempty"`

	AccessControlPolicy []AccessControlPolicyObservation `json:"accessControlPolicy,omitempty" tf:"access_control_policy,omitempty"`

	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	ExpectedBucketOwner *string `json:"expectedBucketOwner,omitempty" tf:"expected_bucket_owner,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type BucketACLParameters struct {

	// +kubebuilder:validation:Optional
	ACL *string `json:"acl,omitempty" tf:"acl,omitempty"`

	// +kubebuilder:validation:Optional
	AccessControlPolicy []AccessControlPolicyParameters `json:"accessControlPolicy,omitempty" tf:"access_control_policy,omitempty"`

	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// +kubebuilder:validation:Optional
	ExpectedBucketOwner *string `json:"expectedBucketOwner,omitempty" tf:"expected_bucket_owner,omitempty"`
}

type GranteeInitParameters struct {
	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type GranteeObservation struct {
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type GranteeParameters struct {

	// +kubebuilder:validation:Optional
	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address,omitempty"`

	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type OwnerInitParameters struct {
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OwnerObservation struct {
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OwnerParameters struct {

	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

// BucketACLSpec defines the desired state of BucketACL
type BucketACLSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BucketACLParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BucketACLInitParameters `json:"initProvider,omitempty"`
}

// BucketACLStatus defines the observed state of BucketACL.
type BucketACLStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BucketACLObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BucketACL is the Schema for the BucketACLs API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,crossplane-k2cloud}
type BucketACL struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.bucket) || (has(self.initProvider) && has(self.initProvider.bucket))",message="spec.forProvider.bucket is a required parameter"
	Spec   BucketACLSpec   `json:"spec"`
	Status BucketACLStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BucketACLList contains a list of BucketACLs
type BucketACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BucketACL `json:"items"`
}

// Repository type metadata.
var (
	BucketACL_Kind             = "BucketACL"
	BucketACL_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BucketACL_Kind}.String()
	BucketACL_KindAPIVersion   = BucketACL_Kind + "." + CRDGroupVersion.String()
	BucketACL_GroupVersionKind = CRDGroupVersion.WithKind(BucketACL_Kind)
)

func init() {
	SchemeBuilder.Register(&BucketACL{}, &BucketACLList{})
}
