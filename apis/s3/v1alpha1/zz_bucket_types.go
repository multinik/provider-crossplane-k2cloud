// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccessControlTranslationInitParameters struct {
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`
}

type AccessControlTranslationObservation struct {
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`
}

type AccessControlTranslationParameters struct {

	// +kubebuilder:validation:Optional
	Owner *string `json:"owner" tf:"owner,omitempty"`
}

type ApplyServerSideEncryptionByDefaultInitParameters struct {
	KMSMasterKeyID *string `json:"kmsMasterKeyId,omitempty" tf:"kms_master_key_id,omitempty"`

	SseAlgorithm *string `json:"sseAlgorithm,omitempty" tf:"sse_algorithm,omitempty"`
}

type ApplyServerSideEncryptionByDefaultObservation struct {
	KMSMasterKeyID *string `json:"kmsMasterKeyId,omitempty" tf:"kms_master_key_id,omitempty"`

	SseAlgorithm *string `json:"sseAlgorithm,omitempty" tf:"sse_algorithm,omitempty"`
}

type ApplyServerSideEncryptionByDefaultParameters struct {

	// +kubebuilder:validation:Optional
	KMSMasterKeyID *string `json:"kmsMasterKeyId,omitempty" tf:"kms_master_key_id,omitempty"`

	// +kubebuilder:validation:Optional
	SseAlgorithm *string `json:"sseAlgorithm" tf:"sse_algorithm,omitempty"`
}

type BucketInitParameters struct {
	ACL *string `json:"acl,omitempty" tf:"acl,omitempty"`

	AccelerationStatus *string `json:"accelerationStatus,omitempty" tf:"acceleration_status,omitempty"`

	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	BucketPrefix *string `json:"bucketPrefix,omitempty" tf:"bucket_prefix,omitempty"`

	CorsRule []CorsRuleInitParameters `json:"corsRule,omitempty" tf:"cors_rule,omitempty"`

	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	Grant []GrantInitParameters `json:"grant,omitempty" tf:"grant,omitempty"`

	HostedZoneID *string `json:"hostedZoneId,omitempty" tf:"hosted_zone_id,omitempty"`

	LifecycleRule []LifecycleRuleInitParameters `json:"lifecycleRule,omitempty" tf:"lifecycle_rule,omitempty"`

	Logging []LoggingInitParameters `json:"logging,omitempty" tf:"logging,omitempty"`

	ObjectLockConfiguration []ObjectLockConfigurationInitParameters `json:"objectLockConfiguration,omitempty" tf:"object_lock_configuration,omitempty"`

	ObjectLockEnabled *bool `json:"objectLockEnabled,omitempty" tf:"object_lock_enabled,omitempty"`

	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	ReplicationConfiguration []ReplicationConfigurationInitParameters `json:"replicationConfiguration,omitempty" tf:"replication_configuration,omitempty"`

	RequestPayer *string `json:"requestPayer,omitempty" tf:"request_payer,omitempty"`

	ServerSideEncryptionConfiguration []ServerSideEncryptionConfigurationInitParameters `json:"serverSideEncryptionConfiguration,omitempty" tf:"server_side_encryption_configuration,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	Versioning []VersioningInitParameters `json:"versioning,omitempty" tf:"versioning,omitempty"`

	Website []WebsiteInitParameters `json:"website,omitempty" tf:"website,omitempty"`
}

type BucketObservation struct {
	ACL *string `json:"acl,omitempty" tf:"acl,omitempty"`

	AccelerationStatus *string `json:"accelerationStatus,omitempty" tf:"acceleration_status,omitempty"`

	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	BucketDomainName *string `json:"bucketDomainName,omitempty" tf:"bucket_domain_name,omitempty"`

	BucketPrefix *string `json:"bucketPrefix,omitempty" tf:"bucket_prefix,omitempty"`

	BucketRegionalDomainName *string `json:"bucketRegionalDomainName,omitempty" tf:"bucket_regional_domain_name,omitempty"`

	CorsRule []CorsRuleObservation `json:"corsRule,omitempty" tf:"cors_rule,omitempty"`

	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	Grant []GrantObservation `json:"grant,omitempty" tf:"grant,omitempty"`

	HostedZoneID *string `json:"hostedZoneId,omitempty" tf:"hosted_zone_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	LifecycleRule []LifecycleRuleObservation `json:"lifecycleRule,omitempty" tf:"lifecycle_rule,omitempty"`

	Logging []LoggingObservation `json:"logging,omitempty" tf:"logging,omitempty"`

	ObjectLockConfiguration []ObjectLockConfigurationObservation `json:"objectLockConfiguration,omitempty" tf:"object_lock_configuration,omitempty"`

	ObjectLockEnabled *bool `json:"objectLockEnabled,omitempty" tf:"object_lock_enabled,omitempty"`

	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	ReplicationConfiguration []ReplicationConfigurationObservation `json:"replicationConfiguration,omitempty" tf:"replication_configuration,omitempty"`

	RequestPayer *string `json:"requestPayer,omitempty" tf:"request_payer,omitempty"`

	ServerSideEncryptionConfiguration []ServerSideEncryptionConfigurationObservation `json:"serverSideEncryptionConfiguration,omitempty" tf:"server_side_encryption_configuration,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	Versioning []VersioningObservation `json:"versioning,omitempty" tf:"versioning,omitempty"`

	Website []WebsiteObservation `json:"website,omitempty" tf:"website,omitempty"`

	WebsiteDomain *string `json:"websiteDomain,omitempty" tf:"website_domain,omitempty"`

	WebsiteEndpoint *string `json:"websiteEndpoint,omitempty" tf:"website_endpoint,omitempty"`
}

type BucketParameters struct {

	// +kubebuilder:validation:Optional
	ACL *string `json:"acl,omitempty" tf:"acl,omitempty"`

	// +kubebuilder:validation:Optional
	AccelerationStatus *string `json:"accelerationStatus,omitempty" tf:"acceleration_status,omitempty"`

	// +kubebuilder:validation:Optional
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// +kubebuilder:validation:Optional
	BucketPrefix *string `json:"bucketPrefix,omitempty" tf:"bucket_prefix,omitempty"`

	// +kubebuilder:validation:Optional
	CorsRule []CorsRuleParameters `json:"corsRule,omitempty" tf:"cors_rule,omitempty"`

	// +kubebuilder:validation:Optional
	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	// +kubebuilder:validation:Optional
	Grant []GrantParameters `json:"grant,omitempty" tf:"grant,omitempty"`

	// +kubebuilder:validation:Optional
	HostedZoneID *string `json:"hostedZoneId,omitempty" tf:"hosted_zone_id,omitempty"`

	// +kubebuilder:validation:Optional
	LifecycleRule []LifecycleRuleParameters `json:"lifecycleRule,omitempty" tf:"lifecycle_rule,omitempty"`

	// +kubebuilder:validation:Optional
	Logging []LoggingParameters `json:"logging,omitempty" tf:"logging,omitempty"`

	// +kubebuilder:validation:Optional
	ObjectLockConfiguration []ObjectLockConfigurationParameters `json:"objectLockConfiguration,omitempty" tf:"object_lock_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	ObjectLockEnabled *bool `json:"objectLockEnabled,omitempty" tf:"object_lock_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// +kubebuilder:validation:Optional
	ReplicationConfiguration []ReplicationConfigurationParameters `json:"replicationConfiguration,omitempty" tf:"replication_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	RequestPayer *string `json:"requestPayer,omitempty" tf:"request_payer,omitempty"`

	// +kubebuilder:validation:Optional
	ServerSideEncryptionConfiguration []ServerSideEncryptionConfigurationParameters `json:"serverSideEncryptionConfiguration,omitempty" tf:"server_side_encryption_configuration,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	// +kubebuilder:validation:Optional
	Versioning []VersioningParameters `json:"versioning,omitempty" tf:"versioning,omitempty"`

	// +kubebuilder:validation:Optional
	Website []WebsiteParameters `json:"website,omitempty" tf:"website,omitempty"`
}

type CorsRuleInitParameters struct {
	AllowedHeaders []*string `json:"allowedHeaders,omitempty" tf:"allowed_headers,omitempty"`

	AllowedMethods []*string `json:"allowedMethods,omitempty" tf:"allowed_methods,omitempty"`

	AllowedOrigins []*string `json:"allowedOrigins,omitempty" tf:"allowed_origins,omitempty"`

	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	MaxAgeSeconds *float64 `json:"maxAgeSeconds,omitempty" tf:"max_age_seconds,omitempty"`
}

type CorsRuleObservation struct {
	AllowedHeaders []*string `json:"allowedHeaders,omitempty" tf:"allowed_headers,omitempty"`

	AllowedMethods []*string `json:"allowedMethods,omitempty" tf:"allowed_methods,omitempty"`

	AllowedOrigins []*string `json:"allowedOrigins,omitempty" tf:"allowed_origins,omitempty"`

	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	MaxAgeSeconds *float64 `json:"maxAgeSeconds,omitempty" tf:"max_age_seconds,omitempty"`
}

type CorsRuleParameters struct {

	// +kubebuilder:validation:Optional
	AllowedHeaders []*string `json:"allowedHeaders,omitempty" tf:"allowed_headers,omitempty"`

	// +kubebuilder:validation:Optional
	AllowedMethods []*string `json:"allowedMethods" tf:"allowed_methods,omitempty"`

	// +kubebuilder:validation:Optional
	AllowedOrigins []*string `json:"allowedOrigins" tf:"allowed_origins,omitempty"`

	// +kubebuilder:validation:Optional
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// +kubebuilder:validation:Optional
	MaxAgeSeconds *float64 `json:"maxAgeSeconds,omitempty" tf:"max_age_seconds,omitempty"`
}

type DefaultRetentionInitParameters struct {
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Years *float64 `json:"years,omitempty" tf:"years,omitempty"`
}

type DefaultRetentionObservation struct {
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	Years *float64 `json:"years,omitempty" tf:"years,omitempty"`
}

type DefaultRetentionParameters struct {

	// +kubebuilder:validation:Optional
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	Years *float64 `json:"years,omitempty" tf:"years,omitempty"`
}

type DestinationInitParameters struct {
	AccessControlTranslation []AccessControlTranslationInitParameters `json:"accessControlTranslation,omitempty" tf:"access_control_translation,omitempty"`

	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	Metrics []MetricsInitParameters `json:"metrics,omitempty" tf:"metrics,omitempty"`

	ReplicaKMSKeyID *string `json:"replicaKmsKeyId,omitempty" tf:"replica_kms_key_id,omitempty"`

	ReplicationTime []ReplicationTimeInitParameters `json:"replicationTime,omitempty" tf:"replication_time,omitempty"`

	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`
}

type DestinationObservation struct {
	AccessControlTranslation []AccessControlTranslationObservation `json:"accessControlTranslation,omitempty" tf:"access_control_translation,omitempty"`

	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	Metrics []MetricsObservation `json:"metrics,omitempty" tf:"metrics,omitempty"`

	ReplicaKMSKeyID *string `json:"replicaKmsKeyId,omitempty" tf:"replica_kms_key_id,omitempty"`

	ReplicationTime []ReplicationTimeObservation `json:"replicationTime,omitempty" tf:"replication_time,omitempty"`

	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`
}

type DestinationParameters struct {

	// +kubebuilder:validation:Optional
	AccessControlTranslation []AccessControlTranslationParameters `json:"accessControlTranslation,omitempty" tf:"access_control_translation,omitempty"`

	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket" tf:"bucket,omitempty"`

	// +kubebuilder:validation:Optional
	Metrics []MetricsParameters `json:"metrics,omitempty" tf:"metrics,omitempty"`

	// +kubebuilder:validation:Optional
	ReplicaKMSKeyID *string `json:"replicaKmsKeyId,omitempty" tf:"replica_kms_key_id,omitempty"`

	// +kubebuilder:validation:Optional
	ReplicationTime []ReplicationTimeParameters `json:"replicationTime,omitempty" tf:"replication_time,omitempty"`

	// +kubebuilder:validation:Optional
	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`
}

type ExpirationInitParameters struct {
	Date *string `json:"date,omitempty" tf:"date,omitempty"`

	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	ExpiredObjectDeleteMarker *bool `json:"expiredObjectDeleteMarker,omitempty" tf:"expired_object_delete_marker,omitempty"`
}

type ExpirationObservation struct {
	Date *string `json:"date,omitempty" tf:"date,omitempty"`

	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	ExpiredObjectDeleteMarker *bool `json:"expiredObjectDeleteMarker,omitempty" tf:"expired_object_delete_marker,omitempty"`
}

type ExpirationParameters struct {

	// +kubebuilder:validation:Optional
	Date *string `json:"date,omitempty" tf:"date,omitempty"`

	// +kubebuilder:validation:Optional
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	// +kubebuilder:validation:Optional
	ExpiredObjectDeleteMarker *bool `json:"expiredObjectDeleteMarker,omitempty" tf:"expired_object_delete_marker,omitempty"`
}

type FilterInitParameters struct {
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type FilterObservation struct {
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type FilterParameters struct {

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type GrantInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +listType=set
	Permissions []*string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type GrantObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +listType=set
	Permissions []*string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type GrantParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Optional
	// +listType=set
	Permissions []*string `json:"permissions" tf:"permissions,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type LifecycleRuleInitParameters struct {
	AbortIncompleteMultipartUploadDays *float64 `json:"abortIncompleteMultipartUploadDays,omitempty" tf:"abort_incomplete_multipart_upload_days,omitempty"`

	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Expiration []ExpirationInitParameters `json:"expiration,omitempty" tf:"expiration,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	NoncurrentVersionExpiration []NoncurrentVersionExpirationInitParameters `json:"noncurrentVersionExpiration,omitempty" tf:"noncurrent_version_expiration,omitempty"`

	NoncurrentVersionTransition []NoncurrentVersionTransitionInitParameters `json:"noncurrentVersionTransition,omitempty" tf:"noncurrent_version_transition,omitempty"`

	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	Transition []TransitionInitParameters `json:"transition,omitempty" tf:"transition,omitempty"`
}

type LifecycleRuleObservation struct {
	AbortIncompleteMultipartUploadDays *float64 `json:"abortIncompleteMultipartUploadDays,omitempty" tf:"abort_incomplete_multipart_upload_days,omitempty"`

	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Expiration []ExpirationObservation `json:"expiration,omitempty" tf:"expiration,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	NoncurrentVersionExpiration []NoncurrentVersionExpirationObservation `json:"noncurrentVersionExpiration,omitempty" tf:"noncurrent_version_expiration,omitempty"`

	NoncurrentVersionTransition []NoncurrentVersionTransitionObservation `json:"noncurrentVersionTransition,omitempty" tf:"noncurrent_version_transition,omitempty"`

	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	Transition []TransitionObservation `json:"transition,omitempty" tf:"transition,omitempty"`
}

type LifecycleRuleParameters struct {

	// +kubebuilder:validation:Optional
	AbortIncompleteMultipartUploadDays *float64 `json:"abortIncompleteMultipartUploadDays,omitempty" tf:"abort_incomplete_multipart_upload_days,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Expiration []ExpirationParameters `json:"expiration,omitempty" tf:"expiration,omitempty"`

	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Optional
	NoncurrentVersionExpiration []NoncurrentVersionExpirationParameters `json:"noncurrentVersionExpiration,omitempty" tf:"noncurrent_version_expiration,omitempty"`

	// +kubebuilder:validation:Optional
	NoncurrentVersionTransition []NoncurrentVersionTransitionParameters `json:"noncurrentVersionTransition,omitempty" tf:"noncurrent_version_transition,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +kubebuilder:validation:Optional
	Transition []TransitionParameters `json:"transition,omitempty" tf:"transition,omitempty"`
}

type LoggingInitParameters struct {
	TargetBucket *string `json:"targetBucket,omitempty" tf:"target_bucket,omitempty"`

	TargetPrefix *string `json:"targetPrefix,omitempty" tf:"target_prefix,omitempty"`
}

type LoggingObservation struct {
	TargetBucket *string `json:"targetBucket,omitempty" tf:"target_bucket,omitempty"`

	TargetPrefix *string `json:"targetPrefix,omitempty" tf:"target_prefix,omitempty"`
}

type LoggingParameters struct {

	// +kubebuilder:validation:Optional
	TargetBucket *string `json:"targetBucket" tf:"target_bucket,omitempty"`

	// +kubebuilder:validation:Optional
	TargetPrefix *string `json:"targetPrefix,omitempty" tf:"target_prefix,omitempty"`
}

type MetricsInitParameters struct {
	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type MetricsObservation struct {
	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type MetricsParameters struct {

	// +kubebuilder:validation:Optional
	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`

	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type NoncurrentVersionExpirationInitParameters struct {
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`
}

type NoncurrentVersionExpirationObservation struct {
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`
}

type NoncurrentVersionExpirationParameters struct {

	// +kubebuilder:validation:Optional
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`
}

type NoncurrentVersionTransitionInitParameters struct {
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`
}

type NoncurrentVersionTransitionObservation struct {
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`
}

type NoncurrentVersionTransitionParameters struct {

	// +kubebuilder:validation:Optional
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	// +kubebuilder:validation:Optional
	StorageClass *string `json:"storageClass" tf:"storage_class,omitempty"`
}

type ObjectLockConfigurationInitParameters struct {
	ObjectLockEnabled *string `json:"objectLockEnabled,omitempty" tf:"object_lock_enabled,omitempty"`

	Rule []RuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type ObjectLockConfigurationObservation struct {
	ObjectLockEnabled *string `json:"objectLockEnabled,omitempty" tf:"object_lock_enabled,omitempty"`

	Rule []RuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type ObjectLockConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	ObjectLockEnabled *string `json:"objectLockEnabled,omitempty" tf:"object_lock_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type ReplicationConfigurationInitParameters struct {
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	Rules []RulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type ReplicationConfigurationObservation struct {
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	Rules []RulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type ReplicationConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	Role *string `json:"role" tf:"role,omitempty"`

	// +kubebuilder:validation:Optional
	Rules []RulesParameters `json:"rules" tf:"rules,omitempty"`
}

type ReplicationTimeInitParameters struct {
	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type ReplicationTimeObservation struct {
	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type ReplicationTimeParameters struct {

	// +kubebuilder:validation:Optional
	Minutes *float64 `json:"minutes,omitempty" tf:"minutes,omitempty"`

	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type RuleInitParameters struct {
	DefaultRetention []DefaultRetentionInitParameters `json:"defaultRetention,omitempty" tf:"default_retention,omitempty"`
}

type RuleObservation struct {
	DefaultRetention []DefaultRetentionObservation `json:"defaultRetention,omitempty" tf:"default_retention,omitempty"`
}

type RuleParameters struct {

	// +kubebuilder:validation:Optional
	DefaultRetention []DefaultRetentionParameters `json:"defaultRetention" tf:"default_retention,omitempty"`
}

type RulesInitParameters struct {
	DeleteMarkerReplicationStatus *string `json:"deleteMarkerReplicationStatus,omitempty" tf:"delete_marker_replication_status,omitempty"`

	Destination []DestinationInitParameters `json:"destination,omitempty" tf:"destination,omitempty"`

	Filter []FilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	SourceSelectionCriteria []SourceSelectionCriteriaInitParameters `json:"sourceSelectionCriteria,omitempty" tf:"source_selection_criteria,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type RulesObservation struct {
	DeleteMarkerReplicationStatus *string `json:"deleteMarkerReplicationStatus,omitempty" tf:"delete_marker_replication_status,omitempty"`

	Destination []DestinationObservation `json:"destination,omitempty" tf:"destination,omitempty"`

	Filter []FilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	SourceSelectionCriteria []SourceSelectionCriteriaObservation `json:"sourceSelectionCriteria,omitempty" tf:"source_selection_criteria,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type RulesParameters struct {

	// +kubebuilder:validation:Optional
	DeleteMarkerReplicationStatus *string `json:"deleteMarkerReplicationStatus,omitempty" tf:"delete_marker_replication_status,omitempty"`

	// +kubebuilder:validation:Optional
	Destination []DestinationParameters `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Optional
	Filter []FilterParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// +kubebuilder:validation:Optional
	SourceSelectionCriteria []SourceSelectionCriteriaParameters `json:"sourceSelectionCriteria,omitempty" tf:"source_selection_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Status *string `json:"status" tf:"status,omitempty"`
}

type ServerSideEncryptionConfigurationInitParameters struct {
	Rule []ServerSideEncryptionConfigurationRuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type ServerSideEncryptionConfigurationObservation struct {
	Rule []ServerSideEncryptionConfigurationRuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type ServerSideEncryptionConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	Rule []ServerSideEncryptionConfigurationRuleParameters `json:"rule" tf:"rule,omitempty"`
}

type ServerSideEncryptionConfigurationRuleInitParameters struct {
	ApplyServerSideEncryptionByDefault []ApplyServerSideEncryptionByDefaultInitParameters `json:"applyServerSideEncryptionByDefault,omitempty" tf:"apply_server_side_encryption_by_default,omitempty"`

	BucketKeyEnabled *bool `json:"bucketKeyEnabled,omitempty" tf:"bucket_key_enabled,omitempty"`
}

type ServerSideEncryptionConfigurationRuleObservation struct {
	ApplyServerSideEncryptionByDefault []ApplyServerSideEncryptionByDefaultObservation `json:"applyServerSideEncryptionByDefault,omitempty" tf:"apply_server_side_encryption_by_default,omitempty"`

	BucketKeyEnabled *bool `json:"bucketKeyEnabled,omitempty" tf:"bucket_key_enabled,omitempty"`
}

type ServerSideEncryptionConfigurationRuleParameters struct {

	// +kubebuilder:validation:Optional
	ApplyServerSideEncryptionByDefault []ApplyServerSideEncryptionByDefaultParameters `json:"applyServerSideEncryptionByDefault" tf:"apply_server_side_encryption_by_default,omitempty"`

	// +kubebuilder:validation:Optional
	BucketKeyEnabled *bool `json:"bucketKeyEnabled,omitempty" tf:"bucket_key_enabled,omitempty"`
}

type SourceSelectionCriteriaInitParameters struct {
	SseKMSEncryptedObjects []SseKMSEncryptedObjectsInitParameters `json:"sseKmsEncryptedObjects,omitempty" tf:"sse_kms_encrypted_objects,omitempty"`
}

type SourceSelectionCriteriaObservation struct {
	SseKMSEncryptedObjects []SseKMSEncryptedObjectsObservation `json:"sseKmsEncryptedObjects,omitempty" tf:"sse_kms_encrypted_objects,omitempty"`
}

type SourceSelectionCriteriaParameters struct {

	// +kubebuilder:validation:Optional
	SseKMSEncryptedObjects []SseKMSEncryptedObjectsParameters `json:"sseKmsEncryptedObjects,omitempty" tf:"sse_kms_encrypted_objects,omitempty"`
}

type SseKMSEncryptedObjectsInitParameters struct {
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type SseKMSEncryptedObjectsObservation struct {
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type SseKMSEncryptedObjectsParameters struct {

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`
}

type TransitionInitParameters struct {
	Date *string `json:"date,omitempty" tf:"date,omitempty"`

	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`
}

type TransitionObservation struct {
	Date *string `json:"date,omitempty" tf:"date,omitempty"`

	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`
}

type TransitionParameters struct {

	// +kubebuilder:validation:Optional
	Date *string `json:"date,omitempty" tf:"date,omitempty"`

	// +kubebuilder:validation:Optional
	Days *float64 `json:"days,omitempty" tf:"days,omitempty"`

	// +kubebuilder:validation:Optional
	StorageClass *string `json:"storageClass" tf:"storage_class,omitempty"`
}

type VersioningInitParameters struct {
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	MfaDelete *bool `json:"mfaDelete,omitempty" tf:"mfa_delete,omitempty"`
}

type VersioningObservation struct {
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	MfaDelete *bool `json:"mfaDelete,omitempty" tf:"mfa_delete,omitempty"`
}

type VersioningParameters struct {

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	MfaDelete *bool `json:"mfaDelete,omitempty" tf:"mfa_delete,omitempty"`
}

type WebsiteInitParameters struct {
	ErrorDocument *string `json:"errorDocument,omitempty" tf:"error_document,omitempty"`

	IndexDocument *string `json:"indexDocument,omitempty" tf:"index_document,omitempty"`

	RedirectAllRequestsTo *string `json:"redirectAllRequestsTo,omitempty" tf:"redirect_all_requests_to,omitempty"`

	RoutingRules *string `json:"routingRules,omitempty" tf:"routing_rules,omitempty"`
}

type WebsiteObservation struct {
	ErrorDocument *string `json:"errorDocument,omitempty" tf:"error_document,omitempty"`

	IndexDocument *string `json:"indexDocument,omitempty" tf:"index_document,omitempty"`

	RedirectAllRequestsTo *string `json:"redirectAllRequestsTo,omitempty" tf:"redirect_all_requests_to,omitempty"`

	RoutingRules *string `json:"routingRules,omitempty" tf:"routing_rules,omitempty"`
}

type WebsiteParameters struct {

	// +kubebuilder:validation:Optional
	ErrorDocument *string `json:"errorDocument,omitempty" tf:"error_document,omitempty"`

	// +kubebuilder:validation:Optional
	IndexDocument *string `json:"indexDocument,omitempty" tf:"index_document,omitempty"`

	// +kubebuilder:validation:Optional
	RedirectAllRequestsTo *string `json:"redirectAllRequestsTo,omitempty" tf:"redirect_all_requests_to,omitempty"`

	// +kubebuilder:validation:Optional
	RoutingRules *string `json:"routingRules,omitempty" tf:"routing_rules,omitempty"`
}

// BucketSpec defines the desired state of Bucket
type BucketSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BucketParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BucketInitParameters `json:"initProvider,omitempty"`
}

// BucketStatus defines the observed state of Bucket.
type BucketStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BucketObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Bucket is the Schema for the Buckets API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,crossplane-k2cloud}
type Bucket struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BucketSpec   `json:"spec"`
	Status            BucketStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BucketList contains a list of Buckets
type BucketList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Bucket `json:"items"`
}

// Repository type metadata.
var (
	Bucket_Kind             = "Bucket"
	Bucket_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Bucket_Kind}.String()
	Bucket_KindAPIVersion   = Bucket_Kind + "." + CRDGroupVersion.String()
	Bucket_GroupVersionKind = CRDGroupVersion.WithKind(Bucket_Kind)
)

func init() {
	SchemeBuilder.Register(&Bucket{}, &BucketList{})
}
